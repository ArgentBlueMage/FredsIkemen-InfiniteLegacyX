; KFM's constants and state file.
; There are comments scattered through this file, so you may like to
; take a look if would like to learn more about the cns.

; これはKFMの定数と状態のファイルです。
; このファイルの中には注釈が散らされているので、CNSを習いたいお方は
; 読んでみたらいいです。

[Data]
;Amount of life to start with
;体力ゲージの初期値
life = 1000
;attack power (more is stronger)
;攻撃ダメージ
attack = 100
;defensive power (more is stronger)
;体力パワー
defence = 100
;Percentage to increase defense everytime player is knocked down
fall.defence_up = 50
;Time which player lies down for, before getting up
liedown.time = 60
;Number of points for juggling
airjuggle = 10
;Default hit spark number for HitDefs
sparkno = -1
;Default guard spark number
guard.sparkno = -1
;1 to enable echo on KO
KO.echo = 0
;Volume offset (negative for softer)
volume = 0
;Variables with this index and above will not have their values
;reset to 0 between rounds or matches. There are 60 int variables,
;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
;If omitted, then it defaults to 60 and 40 for integer and float
;variables repectively, meaning that none are persistent, i.e. all
;are reset. If you want your variables to persist between matches,
;you need to override state 5900 from common1.cns.
IntPersistIndex = 60
FloatPersistIndex = 40

[Size]
xscale = .834           ;Horizontal scaling factor.
yscale = .955           ;Vertical scaling factor.
ground.back = 30     ;Player width (back, ground)
ground.front = 30    ;Player width (front, ground)
air.back = 20        ;Player width (back, air)
air.front = 20       ;Player width (front, air)
height = 70          ;Height of player (for opponent to jump over)
attack.dist = 160    ;Default attack distance
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = 85, -130   ;Approximate position of head
mid.pos = -5, -60    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 2       ;Walk forward
walk.back = -2      ;Walk backward
run.fwd  = 5.62            ;Run forward (x, y)  - if y<0, player will hop
run.back = -4.3,-4.5         ;Run backward (x, y) - if y=0, player will run
jump.neu = 0,-7         ;Neutral jumping velocity (x, y)
jump.back = -2.2,-7     ;Jump back Speed (x, y)
jump.fwd = 2.2,-7       ;Jump forward Speed (x, y)
runjump.fwd = 2.6,-7.75    ;.
airjump.neu = 0,-7.75      ;.
airjump.back = -2.55,-7.75 ;Air jump speeds (opt)
airjump.fwd = 2.5,-7.75    ;.
p speeds (opt)
airjump.fwd = 2.5         ;.

[Movement]
airjump.num = 0      ;Number of air jumps allowed (opt)
airjump.height = 30  ;Minimum distance from ground before you can air jump (opt)
yaccel = .35         ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .82 ;Friction coefficient when crouching


;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
; CNS レベル: 基本
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
; CNS レベル: 基本
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1 - Bow
; CNS difficulty: basic
; CNS レベル: 基本
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
; CNS レベル: 基本
[Statedef 191]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 191, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 190

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0

[State 191, 4]
type = PlaySnd
trigger1 = Time = 80
value = 900, 4

; You can delete the following two controllers if you're building your own
; character using KFM. These are the wood pieces that KFM kicks.

;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = -2

[State 195, 1]
type = CtrlSet
trigger1 = Time = 40
value = 1

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------
; Stand Light Punch
; CNS difficulty: easy
[Statedef 200]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 4                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 200                       ;Change animation (Def: no change)
poweradd = 20                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 32, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 9                 ;Time attacker pauses, time opponent shakes
sparkno = s8000                      ;Spark anim no (Def: set above)
sparkxy = -10, -60               ;X-offset for the "hit spark" rel. to p2,
guard.sparkno = s8040
;Y-offset for the spark rel. to p1
hitsound = s5, 1                  ;Sound to play on hit
guardsound = s5, 3                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 7            ;Time that the opponent slides back
ground.hittime  = 7             ;Time opponent is in hit state
ground.velocity = -8             ;Velocity at which opponent is pushed
airguard.velocity = -4.5,-.5     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4.5,-6.5           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10

[State 200, 1]
type = PlaySnd
trigger1 = Time = 0
value = 900, 3

[State 200, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing strong punch
; CNS difficulty: easy
; Note the width controller. It makes KFM's push box larger, so he doesn't
; stand so close to the opponent. Hit Ctrl-C and look at the red bar at his
; feet.
; The sprpriority for this state is at -1, instead of the usual 2 for
; attacks. This makes KFM appear behind the opponent initially.
; The SprPriority controller in [State 210, 4] brings KFM to the front when
; his arm has swung over.
; To stop KFM from pausing in his swing frame, there is a ChangeAnim in
; [State 210, 3] that detects if the hit has come in contact with the
; opponent during that frame, and switches to the next animation element
; (notice the elem=6 parameter). If you don't see what I mean, try commenting
; out that controller, then hit someone with this attack.
[Statedef 210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 60
ctrl = 0
velset = 0,0
anim = 210
sprpriority = -1

[State 210, Width]
type = Width
trigger1 = (AnimElemTime (2) >= 0) && (AnimElemTime (7) < 0)
value = 15,0

[State 210, 1]
type = PlaySnd
trigger1 = Time = 0
value = 900, 5

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 98, 0                   ;Damage that move inflicts, guard damage
animtype = Hard                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 12, 13                 ;Time attacker pauses, time opponent shakes
sparkno = s8001                      ;Spark anim no (Def: set above)
sparkxy = -10, -60               ;X-offset for the "hit spark" rel. to p2,
guard.sparkno = s8040
;Y-offset for the spark rel. to p1
hitsound = s5, 2                 ;Sound to play on hit
guardsound = s5, 3                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 18             ;Time that the opponent slides back
ground.hittime  = 18             ;Time opponent is in hit state
ground.velocity = -11             ;Velocity at which opponent is pushed
airguard.velocity = -4.5,-.5     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4.5,-6.5           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

[State 210, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[Statedef 215]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 60
ctrl = 0
velset = 0,0
anim = 215
sprpriority = -1

[State 210, Width]
type = Width
trigger1 = (AnimElemTime (2) >= 0) && (AnimElemTime (7) < 0)
value = 15,0

[State 210, 1]
type = PlaySnd
trigger1 = Time = 0
value = 900, 5

[State 200, 1]
type = HitDef
trigger1 = animelem = 5
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 45, 0                   ;Damage that move inflicts, guard damage
animtype = Hard                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 13                 ;Time attacker pauses, time opponent shakes
sparkno = s8001                      ;Spark anim no (Def: set above)
sparkxy = -10, -60               ;X-offset for the "hit spark" rel. to p2,
guard.sparkno = s8040
;Y-offset for the spark rel. to p1
hitsound = s5, 2                 ;Sound to play on hit
guardsound = s5, 3                ;Sound to play on guard
ground.type = Low              ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 22             ;Time that the opponent slides back
ground.hittime  = 22             ;Time opponent is in hit state
ground.velocity = 0             ;Velocity at which opponent is pushed
airguard.velocity = -4.5,-.5     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4.5,-6.5           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = 0
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

[State 200, 1]
type = HitDef
trigger1 = animelem = 9
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 45, 0                   ;Damage that move inflicts, guard damage
animtype = Hard                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 12, 13                 ;Time attacker pauses, time opponent shakes
sparkno = s8001                      ;Spark anim no (Def: set above)
sparkxy = -10, -60               ;X-offset for the "hit spark" rel. to p2,
guard.sparkno = s8040
;Y-offset for the spark rel. to p1
hitsound = s5, 2                 ;Sound to play on hit
guardsound = s5, 3                ;Sound to play on guard
ground.type = High              ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 18             ;Time that the opponent slides back
ground.hittime  = 18             ;Time opponent is in hit state
ground.velocity = -11             ;Velocity at which opponent is pushed
airguard.velocity = -4.5,-.5     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4.5,-6.5           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

[State 210, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing light kick
; CNS difficulty: easy
[Statedef 230]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 22
ctrl = 0
velset = 0,0
anim = 230
sprpriority = 2

[State 230, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 1

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 31, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = L                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 9                 ;Time attacker pauses, time opponent shakes
sparkno = s8000                      ;Spark anim no (Def: set above)
sparkxy = -10, -30               ;X-offset for the "hit spark" rel. to p2,
guard.sparkno = s8040
;Y-offset for the spark rel. to p1
hitsound = s5, 1                  ;Sound to play on hit
guardsound = s5, 3                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 7             ;Time that the opponent slides back
ground.hittime  = 7             ;Time opponent is in hit state
ground.velocity = -8             ;Velocity at which opponent is pushed
airguard.velocity = -4.5,-.5     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4.5,-6.5           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10

[State 230, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing strong kick
; CNS difficulty: easy
[Statedef 240]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 65
ctrl = 0
velset = 0,0
anim = 240
sprpriority = 2

[State 240, 1]
type = PlaySnd
trigger1 = Time = 2
value = 900, 6

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 96, 0                   ;Damage that move inflicts, guard damage
animtype = Hard                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                  ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 12, 13                ;Time attacker pauses, time opponent shakes
sparkno = s8001                      ;Spark anim no (Def: set above)
sparkxy = -10, -60               ;X-offset for the "hit spark" rel. to p2,
guard.sparkno = s8040
;Y-offset for the spark rel. to p1
hitsound = s5,2                  ;Sound to play on hit
guardsound = s5, 3                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 18             ;Time that the opponent slides back
ground.hittime  = 18             ;Time opponent is in hit state
ground.velocity = -11             ;Velocity at which opponent is pushed
airguard.velocity = -4.5,-.5     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4.5,-6.5           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

[State 240, 3]
type = PosAdd
trigger1 = AnimElem = 7
x = 12

[State 240, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Crouching light punch
; CNS difficulty: easy
; Description: Simple crouching attack. The HitDef's guardflag parameter
;     is set to "L", meaning that the move can only be guarded low
;     (crouching), and not by standing or jumping opponents.
;     Like for all light attacks, it's a good idea to keep the slidetime
;     and hittime parameters at a smaller number, so the opponent isn't
;     stunned for too long. For all crouching attacks you have to
;     remember to set the attr parameter to indicate that it is crouching
;     attack. In this case, "C, NA" stands for "crouching, normal attack".
;     The HitDef's priority is set at 3, instead of the default of 4,
;     so this attack has a lower priority than most others, meaning
;     KFM will get hit instead of trading hits with his opponent if
;     their attack collision boxes (Clsn1) intersect each other's Clsn2
;     boxes at the same time.
[Statedef 400]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 15
ctrl = 0
anim = 400
sprpriority = 2

[State 400, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = C, NA                     ;Attribute: Standing, Normal Attack
damage = 24, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 9                 ;Time attacker pauses, time opponent shakes
sparkno = s8000                      ;Spark anim no (Def: set above)
sparkxy = -10, -40               ;X-offset for the "hit spark" rel. to p2,
guard.sparkno = s8040
;Y-offset for the spark rel. to p1
hitsound = s5, 1                  ;Sound to play on hit
guardsound = s5, 3                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 7            ;Time that the opponent slides back
ground.hittime  = 7             ;Time opponent is in hit state
ground.velocity = -8             ;Velocity at which opponent is pushed
airguard.velocity = -4.5,-.5     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4.5,-6.5           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10

[State 400, 3]
type = CtrlSet
trigger1 = Time = 5
value = 1

[State 400, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11

;---------------------------------------------------------------------------
;Crouching strong punch
; CNS difficulty: easy
; Description: This is a 2-hit move. It is done by having two HitDefs
;     triggered, one for each frame of animation that hits.
;     Notice how the first hit cannot be guarded by an opponent in the
;     air, because of the "M" in the guardflag, meaning it can only
;     be guarded "middle". The second hit has an "MA" guardflag, so
;     it can be guarded both on the ground and in the air.
; CNS レベル: 易
; 詳細: これは殴打が二発ある攻撃です。
; 殴打できるアニメーションの枚は一々HitDefを登録しています。
; 一発目の攻撃のHitDefにはguardflagが「M」（middle＝中段ガード）
; にセットされているので、相手は空中でガードできません。二発目
; の攻撃のguardflagは「MA」（middle+air＝中段＋空中ガード）で、
; 地上、空中でもガードすることができます。
[Statedef 410]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 50
ctrl = 0
anim = 410
sprpriority = 2

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 2
x = 24

[State 410, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = C, NA                     ;Attribute: Standing, Normal Attack
damage = 86, 0                   ;Damage that move inflicts, guard damage
animtype = Hard                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 12, 13                 ;Time attacker pauses, time opponent shakes
sparkno = s8001                      ;Spark anim no (Def: set above)
sparkxy = -10, -60               ;X-offset for the "hit spark" rel. to p2,
guard.sparkno = s8040
;Y-offset for the spark rel. to p1
hitsound = s5, 2                 ;Sound to play on hit
guardsound = s5, 3                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 18             ;Time that the opponent slides back
ground.hittime  = 18             ;Time opponent is in hit state
ground.velocity = -3,-11             ;Velocity at which opponent is pushed
airguard.velocity = -4.5,-.5     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -3,-11           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
fall = 1
air.fall = 1
yaccel = 0.5
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

[State 410, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
;Crouching light kick
; CNS difficulty: easy
[Statedef 430]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 22
ctrl = 0
anim = 430
sprpriority = 2

[State 430, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = C, NA                     ;Attribute: Standing, Normal Attack
damage = 27, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = L                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 9                 ;Time attacker pauses, time opponent shakes
sparkno = s8000                      ;Spark anim no (Def: set above)
sparkxy = -10, -30               ;X-offset for the "hit spark" rel. to p2,
guard.sparkno = s8040
;Y-offset for the spark rel. to p1
hitsound = s5, 1                  ;Sound to play on hit
guardsound = s5, 3                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 7             ;Time that the opponent slides back
ground.hittime  = 7             ;Time opponent is in hit state
ground.velocity = -8             ;Velocity at which opponent is pushed
airguard.velocity = -4.5,-.5     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4.5,-6.5           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10

[State 430, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
;Crouch Strong Kick
; CNS difficulty: easy
; Description: This move uses "Trip" for the "ground.type" parameter in
;     its HitDef. It's a special type that puts the opponent in a tripped
;     animation as he falls. Also, the hitflag parameter in the HitDef
;     is set to "MAFD". The "D" indicates that a downed opponent can be
;     hit by the attack.
; CNS レベル: 易
; 詳細:
[Statedef 440]
type    = C
movetype= A
physics = C
juggle  = 7
poweradd= 70
ctrl = 0
anim = 440
sprpriority = 2

[State 440, 2]
type = PlaySnd
trigger1 = Time = 2
value = 0, 2

[State 440, 2]
type = HitDef
trigger1 = time = 0
attr = C, NA
damage    = 96
animtype  = Medium
hitflag = MAF
guardflag = L
pausetime = 12,12
sparkno = s8001
sparkxy = -10,-30
hitsound   = s5,2
guardsound = s5,3
guard.sparkno = s8040
ground.type = Low
ground.slidetime = 14
ground.hittime  = 14
ground.velocity = -4.5,-4.5
air.velocity = -3,-4
fall = 1
fall.recover = 0
air.fall = 1
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

[State 440, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
;Jump Light Punch
; CNS difficulty: easy
[Statedef 600]
type    = A
movetype= A
physics = A
juggle  = 2
poweradd= 11
ctrl = 0
anim = 600
sprpriority = 2

[State 600, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 600, 2]
type = HitDef
trigger1 = Time = 0
attr = A, NA
damage    = 26
guardflag = HA
priority = 3
pausetime = 7,8
sparkno = s8000
sparkxy = -10,-58
hitsound   = s5,1
guardsound = s5,3
ground.type = High
ground.slidetime = 5
ground.hittime  = 5
ground.velocity = -4
air.velocity = -1.3,-3

[State 600, 3]
type = CtrlSet
trigger1 = Time = 17
value = 1

;---------------------------------------------------------------------------
;Jump Strong Punch
; CNS difficulty: easy
[Statedef 610]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 65
ctrl = 0
anim = 610
sprpriority = 2

[State 610, 2]
type = PlaySnd
trigger1 = Time = 2
value = 0, 1

[State 610, 3]
type = HitDef
trigger1 = Time = 0
attr = A, NA
damage = 86
guardflag = HA
priority = 4
pausetime = 12,12
sparkno = s8001
sparkxy = -10,-58
hitsound   = s5,2
guardsound = s5,3
animtype = Med
ground.type = High
ground.slidetime = 17
ground.hittime  = 17
ground.velocity = -5
air.velocity = -3,-4
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

;---------------------------------------------------------------------------
;Jump Light Kick
; CNS difficulty: easy
[Statedef 630]
type    = A
movetype= A
physics = A
juggle  = 3
poweradd= 20
ctrl = 0
anim = 630
sprpriority = 2

[State 630, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 630, 2]
type = HitDef
trigger1 = Time = 0
attr = A, NA
damage = 32
guardflag = HA
priority = 3
pausetime = 8,8
sparkno = s8000
sparkxy = -10,-58
hitsound   = s5,1
guardsound = s5,3
ground.type = High
ground.slidetime = 6
ground.hittime  = 6
ground.velocity = -4
air.velocity = -2,-3

;---------------------------------------------------------------------------
;Jump Strong Kick
; CNS difficulty: easy
[Statedef 640]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 65
ctrl = 0
anim = 640
sprpriority = 2

[State 640, 2]
type = PlaySnd
trigger1 = Time = 2
value = 0, 1

[State 640, 3]
type = HitDef
trigger1 = Time = 0
attr = A, NA
damage    = 92
guardflag = HA
priority = 4
pausetime = 12,12
sparkno = s8001
sparkxy = -10,-58
hitsound   = s5,2
guardsound = s5,3
animtype = Med
ground.type = High
ground.slidetime = 15
ground.hittime  = 15
ground.velocity = -5
air.velocity = -3,-4
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

;---------------------------------------------------------------------------


;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
[Statedef 800]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
ctrl = 0
anim = 800
sprpriority = 2

; Notes: The '-' symbol in the hitflag field means that it only affects
;   players who are not in a hit state. This prevents KFM from combo-ing
;   into the throw. The priority should be set to a low number, such as
;   1 or 2, so that the throw does not take precedence over normal attacks.
;   The type of priority must always be set to "Miss" or "Dodge" for throws,
;   otherwise strange behavior can result.
[State 800, 1]
type = HitDef
Trigger1 = Time = 0
attr = S, NT          ;Attributes: Standing, Normal Throw
hitflag = M-          ;Affect only ground people who are not being hit
priority = 1, Miss    ;Throw has low priority, must be miss or dodge type.
sparkno = -1          ;No spark
p1sprpriority = 1     ;Draw p1's sprite in front of p2
                      ;p2's sprite priority is set to 0 by default
p1facing = 1
p2facing = -1          ;Force p2 to face KFM
p1stateno = 810       ;On success, KFM changes to state 810
p2stateno = 820       ;If hit, p2 changes to state 820 in KFM's cns
guard.dist = 0        ;This prevents p2 from going into a guard state if close
fall = 1              ;Force p2 into falling down

[State 800, 2]
type = ChangeState
Trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 800, 3]
type = PlaySnd
trigger1 = Time = 0
value = 900, 5
;---------------------------------------------------------------------------
;Hulks Throw Success! :D
[Statedef 810]
type    = S
movetype= A
physics = N
anim = 810

[State 0, Width]
type = Width
trigger1 = 1
value = 70,30

[State 903, 1]
type = PlaySnd
trigger1 = animelem = 1
value = 0,2

[State 903, 5]
type = sprpriority
Trigger1 = Animelem = 1
value = 3

[State 251, 4]
type = GameMakeAnim
Trigger1 = Time >= 0
Trigger1 = Time <= 5
value = 210
pos = 99, -86

[State 810, 1]
type = TargetBind
trigger1 = AnimElem = 1
pos = 50, 0
time = 6

[State 810, 2]
type = TargetBind
trigger1 = AnimElem = 2
pos = 95, -18
time = 6

[State 810, 3]
type = TargetBind
trigger1 = AnimElem = 3
pos = 98, -38
time = 6

[State 810, 4]
type = TargetBind
trigger1 = AnimElem = 4
pos = -58, -59
time = 6

[State 810, 5]
type = TargetBind
trigger1 = AnimElem = 5
pos = -60, -59
time = 6

[State 810, 6]
type = TargetBind
trigger1 = AnimElem = 6
pos = -20, -65
time = 6

[State 903, 11] ;Damage target
type = TargetLifeAdd
Trigger1 = AnimElem = 6
value = -100

[State 810, State End]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 810, 4]
type = PlaySnd
trigger1 = Time = 35
value = 900, 6

[State 903, 13] ;Hit ground sound
type = PlaySnd
Trigger1 = AnimElem = 9
value = 0,14

[State 903, 14] ;Ground shockwave
type = GameMakeAnim
trigger1 = AnimElem = 9
value = 15
pos = -46, 0
under = 1

[State 904, 2]
type = ScreenBound
Trigger1 = AnimTime >= 0
value = 0


;---------------------------------------------------------------------------
[Statedef 820]
type = A
movetype = H
physics = N
velset = 0,0

[State 820,AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = NoAutoTurn

[State 820,screenbound]
type = screenbound
trigger1 = 1
value = 1
movecamera = 1


[State 820, 1]
type = ChangeAnim2
Trigger1 = Time = 0
value = 820

[State 904, 3] ;Bounce into air
type = ChangeState
Trigger1 = animtime = 0
value = 903

;---------------------------------------------------------------------------
;P2 Bounces into the air from throw
[Statedef 903]
type    = A
movetype= H
physics = N
velset = 4,-7
anim = 5160

[State 0, Turn]
type = Turn
trigger1 = animelem = 1

[State 821, 1] ;Gravity
type = VelAdd
Trigger1 = 1
y = .4

[State 821, 2] ; Recover near ground (use ChangeState)
type = ChangeState
triggerall = Vel Y > 0
triggerall = Pos Y >= -20
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5200 ;HITFALL_RECOVER

[State 821, 3] ; Recover in mid air (use SelfState)
type = SelfState
triggerall = Vel Y > 0
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5210 ;HITFALL_AIRRECOVER

[State 821, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground

;---------------------------------------------------------------------------
 ;---------------------------------------------------------------------------





;---------------------------------------------------------------------------



;---------------------------------------------------------------------------

[Statedef 821]
type    = A
movetype= H
physics = N
velset = 10,-3
poweradd = 40



[State 821, 1] ;Gravity
type = VelAdd
Trigger1 = 1
y = .4

[State 821, 2] ; Recover near ground (use ChangeState)
type = ChangeState
triggerall = Vel Y > 0
triggerall = Pos Y >= -20
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5200 ;HITFALL_RECOVER

[State 821, 3] ; Recover in mid air (use SelfState)
type = SelfState
triggerall = Vel Y > 0
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5210 ;HITFALL_AIRRECOVER

[State 821, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground

;-------------------------------------------------------------------------------
[Statedef 900]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
ctrl = 0
anim = 800
sprpriority = 2
poweradd = 60

; Notes: The '-' symbol in the hitflag field means that it only affects
;   players who are not in a hit state. This prevents KFM from combo-ing
;   into the throw. The priority should be set to a low number, such as
;   1 or 2, so that the throw does not take precedence over normal attacks.
;   The type of priority must always be set to "Miss" or "Dodge" for throws,
;   otherwise strange behavior can result.
[State 800, 1]
type = HitDef
Trigger1 = Time = 0
attr = S, NT          ;Attributes: Standing, Normal Throw
hitflag = M-          ;Affect only ground people who are not being hit
priority = 1, Miss    ;Throw has low priority, must be miss or dodge type.
sparkno = -1          ;No spark
p1sprpriority = 1
                          ;Draw p1's sprite in front of p2
                      ;p2's sprite priority is set to 0 by default
p1facing = 1
p2facing = -1          ;Force p2 to face KFM
p1stateno = 910       ;On success, KFM changes to state 810
p2stateno = 920       ;If hit, p2 changes to state 820 in KFM's cns
guard.dist = 0        ;This prevents p2 from going into a guard state if close
fall = 1
                   ;Force p2 into falling down

[State 800, 2]
type = ChangeState
Trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 800, 3]
type = PlaySnd
trigger1 = Time = 0
value = 900, 5
;---------------------------------------------------------------------------
;Hulks Throw Success! :D
[Statedef 910]
type    = S
movetype= A
physics = N
anim = 900


[State 0, Width]
type = Width
trigger1 = 1
value = 70,30

[State 903, 1]
type = PlaySnd
trigger1 = animelem = 1
value = 0,2

[State 903, 5]
type = sprpriority
Trigger1 = Animelem = 1
value = 3

[State 251, 4]
type = GameMakeAnim
Trigger1 = Time >= 0
Trigger1 = Time <= 5
value = 210
pos = 99, -86

[State 810, 1]
type = TargetBind
trigger1 = AnimElem = 1
pos = 50, 0
time = 6

[State 810, 2]
type = TargetBind
trigger1 = AnimElem = 2
pos = 95, -18
time = 6

[State 810, 3]
type = TargetBind
trigger1 = AnimElem = 3
trigger2 = AnimElem = 6
trigger3 = AnimElem = 9
trigger4 = AnimElem = 12
pos = 98, -38
time = 6

[State 810, 3]
type = TargetBind
trigger1 = AnimElem = 4
trigger2 = AnimElem = 7
trigger3 = AnimElem = 10
trigger4 = AnimElem = 13
pos = 75, -42
time = 5

[State 810, 3]
type = TargetBind
trigger1 = AnimElem = 5
trigger2 = AnimElem = 8
trigger3 = AnimElem = 11
trigger4 = AnimElem = 14
pos = 60, -42
time = 9

[State 0, HitAdd]
type = HitAdd
trigger1 = AnimElem = 5
trigger2 = AnimElem = 8
trigger3 = AnimElem = 11
trigger4 = AnimElem = 14
value = 1


[State 810, 4]
type = TargetBind
trigger1 = AnimElem = 15
pos = -58, -59
time = 6

[State 810, 5]
type = TargetBind
trigger1 = AnimElem = 16
pos = -60, -59
time = 6

[State 810, 6]
type = TargetBind
trigger1 = AnimElem = 17
pos = -20, -65
time = 6

[State 0, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 5
trigger2 = AnimElem = 8
trigger3 = AnimElem = 11
trigger4 = AnimElem = 14
value = 5,2

[State 903, 11] ;Damage target
type = TargetLifeAdd
trigger1 = AnimElem = 5
trigger2 = AnimElem = 8
trigger3 = AnimElem = 11
trigger4 = AnimElem = 14
Trigger5 = AnimElem = 17
value = -30

[State 0, Explod]
type = Explod
trigger1 = AnimElem = 5
trigger2 = AnimElem = 8
trigger3 = AnimElem = 11
trigger4 = AnimElem = 14
anim = 8002
ID = 8002
pos = 90,-118
postype = p1
bindtime = 1
removetime = -2
sprpriority = 5
ontop = 1
ownpal = 1

[State 810, State End]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 810, 4]
type = PlaySnd
trigger1 = Time = 106
value = 900, 6

[State 904, 2]
type = ScreenBound
Trigger1 = AnimTime >= 0
value = 0


;---------------------------------------------------------------------------
[Statedef 920]
type = A
movetype = H
physics = N
velset = 0,0

[State 820,AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = NoAutoTurn

[State 820,screenbound]
type = screenbound
trigger1 = 1
value = 1
movecamera = 1


[State 820, 1]
type = ChangeAnim2
Trigger1 = Time = 0
value = 920

[State 904, 3] ;Bounce into air
type = ChangeState
Trigger1 = animtime = 0
value = 903

;---------------------------------------------------------------------------
; Kung Fu Palm
; CNS difficulty: medium
; Description: This is like a standard attack, but with some differences.
;   There are two HitDefs in this attack. One is triggered when the
;   opponent is near (using a p2bodydist trigger), and the other
;   when the opponent is farther away. The main differences between
;   the near and far versions of the HitDefs is that the near version
;   has a "fall" parameter set to 1, causing the opponent to be knocked
;   down. Other minor differences are the damage, and the velocity to
;   give the opponent.
;   The line "attr = S, SA" line means this is a Standing, Special Attack.
;   It is important you have the attr parameter set correctly for all
;   you HitDefs.
[Statedef 1000]
type    = S
movetype= A
physics = N
juggle  = 4
poweradd= 110
velset = 0,0
anim = 1000
ctrl = 0
sprpriority = 2

[State 1000, 1]
type = PlaySnd
trigger1 = Time = 8
value = 0, 3

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 5
x = 6

[State 0, VelMul]
type = VelMul
trigger1 = animelemtime(5)>0
x = 0.9

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 106, 10
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 12,13
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -11
air.velocity = -4.5,-6.5
fall = 0
yaccel = 0.5
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

[State 1000, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[Statedef 1001]
type    = S
movetype= A
physics = N
juggle  = 4
poweradd= 30
velset = 0,0
anim = 1005
ctrl = 0
sprpriority = 2

[State 1000, 1]
type = PlaySnd
trigger1 = Time = 8
value = 0, 3

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 1
x = 4

[State 0, VelMul]
type = VelMul
trigger1 = animelemtime(1)>0
x = 0.9

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 32, 10
priority  = 3, hit
hitflag = MAFD
guardflag = H
pausetime = 12,13
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -11
air.velocity = -4.5,-6.5
fall = 0
yaccel = 0.5
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
envshake.time = 10
envshake.ampl = 5
envshake.freq = 150

[State 1000, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;----------------------------------------------------------------------------------------------------------roca
;roca
[Statedef 1005]
type = S
movetype = A
physics = S
ctrl = 0
anim = 999 ;animacion del char
velset = 0,0,0

[State 0, VarSet]
type = VarSet
trigger1 = command = "QCF_x"
v = 10
value = 0
[State 0, VarSet]
type = VarSet
trigger1 = command = "QCF_y"
v = 10
value = 2
[State 0, VarSet]
type = VarSet
trigger1 = command = "QCF_a"
v = 10
value = 1
[State 0, VarSet]
type = VarSet
trigger1 = command = "QCF_b"
v = 10
value = 3

[State 1005, 1]
type = PlaySnd
trigger1 = Time = 2
value = 900,8

[State 1030, 5]
type = Helper
trigger1 = var(10)=0
trigger1 = AnimElem = 5
persistent = 0
stateno = 1006; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 40,0
sprpriority = 10
ignorehitpause = 1
ID = 1006
[State 1030, 5]
type = Helper
trigger1 = var(10)=1
trigger1 = AnimElem = 5
persistent = 0
stateno = 1006; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 100,0
sprpriority = 10
ignorehitpause = 1
ID = 1006
[State 1030, 5]
type = Helper
trigger1 = var(10)=2
trigger1 = AnimElem = 5
persistent = 0
stateno = 1006; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 140,0
sprpriority = 10
ignorehitpause = 1
ID = 1006
[State 1030, 5]
type = Helper
trigger1 = var(10)=3
trigger1 = AnimElem = 5
persistent = 0
stateno = 1006; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 200,0
sprpriority = 10
ignorehitpause = 1
ID = 1006


[State 1005,3]
type = ChangeState
trigger1 = Animtime = 0
value = 0
ctrl = 1

[Statedef 1006]
type = S
movetype = A
physics = N
ctrl = 0
anim = 1006 ;animacion del char
velset = 0,0,0

[State 0, Explod]
type = Explod
trigger1 = animelem = 7
anim = 1410
ID = 1410
pos = 0,0
postype = p1
bindtime = 1
removetime = 32
sprpriority = -2
ownpal = 1
removeongethit = 0


[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 7
value = 9999,5

[State 1000, 5]
type = HitDef
trigger1 = animelem = 1
attr = A, SA
animtype  = Hard
damage = 68, 10
priority  = 3, hit
hitflag = MAFD
guardflag = H
pausetime = 4,13
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -11
air.velocity = -4.5,-6.5
fall = 0
air.fall = 1
yaccel = 0.5
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = 0
envshake.time = 10
envshake.ampl = -10
envshake.freq = 230

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animtime = 0

;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; Strong Kung Fu Palm
; CNS difficulty: medium
[Statedef 1010]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 120
velset = 0,0
anim = 1010
ctrl = 0
sprpriority = 2


[State 1020, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 3

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 5
x = 12

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 120, 10
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 12,13
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -4.5,-6.5
air.velocity = -4.5,-6.5
fall = 1
air.fall = 1
yaccel = 0.5
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
envshake.time = 10
envshake.ampl = -10
envshake.freq = 230

[State 1010, 8]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Fast Kung Fu Palm
; CNS difficulty: advanced
; Description: This is a complicated attack move. If you're a beginner,
;     you should skip looking at this for now and check it later when
;     you are more comfortable with the cns.
;     This move puts the other player in a custom get-hit state.
;     The line "p2stateno = 1025" in the HitDef does this. KFM has some
;     palette effects as well as after-image effects.
[Statedef 1020]
type    = S
movetype= A
physics = N
juggle  = 6
poweradd= -500
velset = 0,0
anim = 1020
ctrl = 0
sprpriority = 2

[State 1020, Afterimage]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1020, Afterimage]
type = AfterImageTime
trigger1 = AnimElemTime(8) < 0
time = 2

[State 1020, Blink Yellow]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State 1020, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 3

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 5
x = 12

[State 0, VelMul]
type = VelMul
trigger1 = animelemtime(5)>0
x = 0.9

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 110, 10
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 12,13
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -8,-7
air.velocity = -8,-7
air.fall = 1
yaccel = 0.5
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
fall = 1
p2stateno = 1025    ;Make p2 go to state 1025 on hit
p2facing = 1        ;Force to face p1
envshake.time = 10
envshake.ampl = -10
envshake.freq = 230
getpower = 0,0

[State 1020, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;------------------
; Hit by Fast Kung Fu Palm - shaking from the hit
; (a custom gethit state)
; See State 1020 for details
[Statedef 1025]
type    = A
movetype= H
physics = N
velset = 0,0

[State 1025, Anim] ;Custom animation
type = ChangeAnim2
trigger1 = 1
value = 1025

[State 1025, State]
type = ChangeState
trigger1 = HitShakeOver = 1
value = 1026

;------------------
; Hit by Fast Kung Fu Palm - flying through the air
; (a custom gethit state)
[Statedef 1026]
type    = A
movetype= H
physics = N

[State 1026, Velocity]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 1026, Gravity]
type = VelAdd
trigger1 = 1
y = .45

[State 1026, No scroll]
type = ScreenBound
triggerall = Pos y < -15
trigger1 = BackEdgeBodyDist < 65
trigger2 = FrontEdgeBodyDist < 65
value = 1
movecamera = 0,1

[State 1026, Hit wall]
type = ChangeState
triggerall = Pos y < -15
trigger1 = BackEdgeBodyDist <= 20
trigger2 = FrontEdgeBodyDist <= 20
value = 1027

[State 1026, Hit ground]
type = SelfState
trigger1 = (Vel y > 0) && (Pos y >= 0)
value = 5100

;------------------
; Hit by Fast Kung Fu Palm - hit wall
; (a custom gethit state)
[Statedef 1027]
type    = A
movetype= H
physics = N

[State 1027, Turn]
type = Turn
trigger1 = (Time = 0) && (FrontEdgeBodyDist <= 30)

[State 1027, Pos]
type = PosAdd
trigger1 = Time = 0
x = 15 - BackEdgeBodyDist

[State 1027, Stop moving]
type = PosFreeze
trigger1 = 1
x = 1
y = 1

[State 1027, No scroll]
type = ScreenBound
trigger1 = 1
value = 1
movecamera = 0,1

[State 1027, Spark]
type = Explod
trigger1 = Time = 0
anim = F72
pos = 0, floor (screenpos y) - 50
postype = back
sprpriority = 3

[State 1027, Anim]
type = ChangeAnim2
trigger1 = Time = 0
value = 1027

[State 1027, Sound]
type = PlaySnd
trigger1 = Time = 0
value = F7,0

[State 1027, State]
type = ChangeState
trigger1 = AnimTime = 0
value = 1028

;------------------
; Hit by Fast Kung Fu Palm - bounce off wall
; (a custom gethit state)
[Statedef 1028]
type    = A
movetype= H
physics = N

[State 1028, Vel Y]
type = VelSet
trigger1 = Time = 0
y = -6

[State 1028, Vel X]
type = VelSet
trigger1 = Time = 0
x = 1.6

[State 1028, Turn]
type = Turn
trigger1 = (Time = 0) && (BackEdgeDist < 30)

[State 1028, Gravity]
type = VelAdd
trigger1 = 1
y = .35

[State 1028, Anim 5050] ;Self falling animation
type = ChangeAnim
trigger1 = Time = 0
trigger1 = !SelfAnimExist(5052)
value = 5050

[State 1028, Anim 5052] ;Self falling animation (diagup type)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = SelfAnimExist(5052)
value = 5052

[State 1028, Anim 5060] ;Coming down - normal
type = ChangeAnim
trigger1 = Vel Y > -2
trigger1 = Anim = 5050
trigger1 = SelfAnimExist(5060)
persistent = 0
value = 5060

[State 1028, Anim 5062] ;Coming down - diagup type
type = ChangeAnim
trigger1 = Vel Y > -2
trigger1 = Anim = 5052
trigger1 = SelfAnimExist(5062)
persistent = 0
value = 5062

[State 1028, Hit ground]
type = SelfState
trigger1 = (Vel y > 0) && (Pos y >= 0)
value = 5100

;--------------------------------------------------------------------------------------------------------------wave
;wave
[Statedef 1030]
type = S
movetype = A
physics = S
ctrl = 0
anim = 1030 ;animacion del char
velset = 0,0,0
poweradd = -500

[State 1030, 1]
type = PlaySnd
trigger1 = Time = 2
value = 900,9

[State 1040, 1]
type = PlaySnd
trigger1 = Time = 6
value = 9999,0

[State 1040, 1]
type = PlaySnd
trigger1 = Time = 3
value = 9999,1


[State 1030, 4]
type = Explod
trigger1 = AnimElem = 6
persistent = 0
anim = 9021
postype = P1
pos = -20,0
sprpriority = 10
ignorehitpause = 1
ID = 1600

[State 1030, 5]
type = Helper
trigger1 = AnimElem = 3
persistent = 0
stateno = 1031; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = -20,0
sprpriority = 10
ignorehitpause = 1
ID = 1600


[State 1030, 6]
type = Explod
Anim = 1421
trigger1 = Time = 10
velocity = 0,0
accel=0,0
postype = p1
pos = -40,0
bindTime = 1
removetime = 30
sprpriority = -1
ownpal = 1


[State 1030, 7]
type = Explod
Anim = 9022
trigger1 = Time = 10
velocity = 0,0
accel=0,0
postype = p1
pos = -20,0
bindTime = 1
removetime = 50
sprpriority = 5
ownpal = 1

[State 1030, 5]
type = Helper
trigger1 = AnimElem = 5
persistent = 0
stateno = 9023; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 0,0
sprpriority = 10
ignorehitpause = 1
ID = 9023

[State 1030,8]
type = ChangeState
trigger1 = Animtime = 0
value = 0
ctrl = 1

[Statedef 9023]
type = S
movetype = A
physics = N
ctrl = 0
anim = 9023 ;animacion del char
velset = 0,0,0

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 1
x = 9

[State 1000, 5]
type = HitDef
trigger1 = animelem = 1
trigger2 = animelem = 2
trigger3 = animelem = 4
trigger4 = animelem = 6
trigger5 = animelem = 8
attr = S, SA
animtype  = Hard
damage = 11, 3
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 0,13
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -11
air.velocity = -4.5,-6.5
fall = 0
air.fall = 1
yaccel = 0.5
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
getpower = 0,0

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animtime = 0
;---------------------------------------------------------------------------
[Statedef 1031]
type = S
movetype = I
physics = S
anim = 9021; la anim
sprpriority = 10
postype = p1

[State 0]
type = AfterImage
trigger1 = Time = 0
time = 29 ; tiempo q quieren q duren las sombras, en este caso la anim dura 29 tics asi que ponemos eso
length = 15
framegap = 3
trans = add1; aca pones cuanta transparencia queres, igual que con la animacion
palcontrast = 0,150,150; aca pones el color de las transparencias; esta en RGB
paladd = 0,0,0
palmul = 1,1,1

[State 0]
type = destroyself
trigger1 = animtime = 0; este state es para que se anule el state dspues que termine la animacion


;---------------------------------------------------------------------------





;wave2
[Statedef 1040]
type = S
movetype = A
physics = S
ctrl = 0
anim = 1030 ;animacion del char
velset = 0,0,0
poweradd = -500

[State 1040, 1]
type = PlaySnd
trigger1 = Time = 2
value = 900,9

[State 1040, 1]
type = PlaySnd
trigger1 = Time = 3
value = 9999,0

[State 1040, 1]
type = PlaySnd
trigger1 = Time = 20
value = 9999,1

[State 1040, 1]
type = PlaySnd
trigger1 = Time = 30
value = 9999,0




[State 1040, 4]
type = Explod
trigger1 = AnimElem = 6
persistent = 0
anim = 9021
postype = P1
pos = -20,0
sprpriority = 10
ignorehitpause = 1
ID = 1600

[State 1040, 5]
type = Helper
trigger1 = AnimElem = 3
persistent = 0
stateno = 1041; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = -20,0
sprpriority = 10
ignorehitpause = 1
ID = 1600

[State 1040, 4]
type = Explod
Anim = 1421
trigger1 = Time = 10
velocity = 0,0
accel=0,0
postype = p1
pos = -40,0
bindTime = 1
removetime = 30
sprpriority = -1
ownpal = 1


[State 1040, 5]
type = Explod
Anim = 9022
trigger1 = Time = 10
velocity = 0,0
accel=0,0
postype = p1
pos = -20,0
bindTime = 1
removetime = 50
sprpriority = 5
ownpal = 1

[State 1030, 5]
type = Helper
trigger1 = AnimElem = 5
persistent = 0
stateno = 9024; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 0,0
sprpriority = 10
ignorehitpause = 1
ID = 9024

[State 1030,8]
type = ChangeState
trigger1 = Animtime = 0
value = 0
ctrl = 1

[Statedef 9024]
type = S
movetype = A
physics = N
ctrl = 0
anim = 9024 ;animacion del char
velset = 0,0

[State 0, NotHitBy]
type = NotHitBy
trigger1 =1
value = SCA

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 1
x = 4

[State 0, Width]
type = Width
trigger1 = 1
value = 5,5

[State 0, PlayerPush]
type = PlayerPush
trigger1 = 1
value = 1

[State 1000, 5]
type = HitDef
trigger1 = animelem = 6
trigger2 = animelem = 14
trigger3 = animelem = 22
attr = S, SA
animtype  = Hard
damage = 23, 10
priority  = 3, hit
hitflag = MAF
guardflag = H
pausetime = 0,13
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -11
air.velocity = -4.5,-6.5
fall = 0
air.fall = 1
yaccel = 0.5
ground.cornerpush.veloff = -10
guard.cornerpush.veloff = -10
getpower = 0,0

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animtime = 0

;---------------------------------------------------------------------------

[Statedef 1041]
type = S
movetype = I
physics = S
anim = 9021; la anim
sprpriority = 10
postype = p1

[State 0]
type = AfterImage
trigger1 = Time = 0
time = 29 ; tiempo q quieren q duren las sombras, en este caso la anim dura 29 tics asi que ponemos eso
length = 15
framegap = 3
trans = add1; aca pones cuanta transparencia queres, igual que con la animacion
palcontrast = 0,150,150; aca pones el color de las transparencias; esta en RGB
paladd = 0,0,0
palmul = 1,1,1

[State 0]
type = destroyself
trigger1 = animtime = 0; este state es para que se anule el state dspues que termine la animacion


;---------------------------------------------------------------------------
; Light Kung Fu Upper
; CNS difficulty: easy
; Description: This is a simple special attack that can hit twice. Notice
;     the use of the Width controller to keep opponents from getting too
;     close to KFM during his uppercut (press Ctrl-C, and look at the
;     yellow bar at KFM's feet during the move).
;     The second HitDef has some interesting parameters. fall.recovertime
;     is used to prevent the opponent (p2) from recovering immediately
;     after being hit (eg. press x+y with KFM to recover). This gives the
;     attacking KFM a chance to follow up with an extra attack, such as
;     a Kung Fu Knee. The yaccel parameter, set at 0.4, makes p2 fall at a
;     greater value of acceleration than the default, which is 0.35.
[Statedef 1100]
type    = S
movetype= A
physics = N
juggle  = 9
poweradd= 110
velset = 0,0
anim = 1100
ctrl = 0
sprpriority = 2

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 1
x = 5

[State 0, VelMul]
type = VelMul
trigger1 = animelemtime(1)>0
x = 0.9

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 7
x = 0

[State 1100, 1]
type = PlaySnd
trigger1 = AnimElem = 3
value = 900, 6

[State 1100, 1]
type = PlaySnd
trigger1 = AnimElem = 3
value = 102, 0

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 106, 10
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 12,12
sparkno = s8002
guard.sparkno = s8040
sparkxy = 0,-70
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -2,-10
air.velocity = -2,-10
fall = 1
air.fall = 1
yaccel = 0.5
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = -10
envshake.time = 10
envshake.ampl = -10
envshake.freq = 230

[State 1100, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Strong Kung Fu Upper
[Statedef 1110]
type    = S
movetype= A
physics = N
juggle  = 9
poweradd= 120
velset = 0,0
anim = 1110
ctrl = 0
sprpriority = 2

[State 1110, Width]
type = Width
trigger1 = AnimElemTime(4) >= 0 && AnimElemTime(14) < 0
value = 5,0

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 1
x = 8

[State 0, VelMul]
type = VelMul
trigger1 = animelemtime(1)>0
x = 0.9

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 7
x = 0

[State 1100, 1]
type = PlaySnd
trigger1 = AnimElem = 3
value = 900, 6

[State 1110, 1]
type = PlaySnd
trigger1 = AnimElem = 3
value = 102, 0

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 116, 10
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 12,12
sparkno = s8002
guard.sparkno = s8040
sparkxy = 0,-70
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -2,-10
air.velocity = -2,-10
fall = 1
air.fall = 1
yaccel = 0.5
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = -10
envshake.time = 10
envshake.ampl = -10
envshake.freq = 230

[State 1110, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Fast Kung Fu Upper
[Statedef 1120]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= -330
velset = 0,0
anim = 1120
ctrl = 0
sprpriority = 2

[State 1120, Width]
type = Width
trigger1 = AnimElemTime(4) >= 0 && AnimElemTime(14) < 0
value = 5,0

[State 1120, Afterimage]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1120, Afterimage]
type = AfterImageTime
trigger1 = AnimTime < -2
time = 2

[State 1120, Blink Yellow]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State 1120, 1]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 2

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 53, 10
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 16,18
sparkno = s8002
guard.sparkno = s8040
sparkxy = 0,-70
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -2,-13
air.velocity = -2,-13
fall = 1
air.fall = 1
yaccel = 0.4
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = -10
envshake.time = 10
envshake.ampl = -10
envshake.freq = 230
getpower = 0,0

[State 1120, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1




;---------------------------------------------------------------------------
; Light Kung Fu Blow
; CNS difficulty: easy
; Notes: This uses the EnvShake controller to shake the screen. It makes the
;        move look stronger.
[Statedef 1200]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 100
velset = 0,0
anim = 1200
ctrl = 0
sprpriority = 2

[State 1200, 1]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 3

[State 1200, Width 1]
type = Width
trigger1 = AnimElemTime(5) >= 0 && AnimElemTime(6) < 0
value = 10,0

[State 1200, Width 2]
type = Width
trigger1 = AnimElemTime(6) >= 0 && AnimElemTime(9) < 0
value = 20,0

[State 1200, Shake Screen]
type = EnvShake
trigger1 = AnimElem = 5
time = 4     ;Time to shake screen
ampl = 2     ;Amount to shake
freq = 180   ;A frequency of 180 shakes the screen rapidly
ignorehitpause = 1

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 35, 10
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 12,24
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 28
ground.hittime  = 28
ground.velocity = -8
air.velocity = -4.5,-6.5
fall = 0
air.fall = 1
yaccel = 0.4
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = -10

[State 1200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Strong Kung Fu Blow
; CNS difficulty: easy
[Statedef 1210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 120
velset = 0,0
anim = 1210
ctrl = 0
sprpriority = 2

[State 1210, 1]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 3

[State 1210, Width 1]
type = Width
trigger1 = AnimElemTime(5) >= 0 && AnimElemTime(6) < 0
value = 10,0

[State 1210, Width 2]
type = Width
trigger1 = AnimElemTime(6) >= 0 && AnimElemTime(9) < 0
value = 20,0

[State 1210, Shake Screen]
type = EnvShake
trigger1 = AnimElem = 5
time = 8
ampl = 2
freq = 170   ;A frequency of less than 180 causes a dampening effect
ignorehitpause = 1

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 46, 10
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 12,24
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 28
ground.hittime  = 28
ground.velocity = -8
air.velocity = -4.5,-6.5
fall = 0
air.fall = 1
yaccel = 0.4
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = -10

[State 1210, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Fast Kung Fu Blow
; CNS difficulty: easy
[Statedef 1220]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= -330
velset = 0,0
anim = 1220
ctrl = 0
sprpriority = 2

[State 1220, Afterimage]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1220, Afterimage]
type = AfterImageTime
trigger1 = AnimTime < -2
time = 2

[State 1220, Blink Yellow]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State 1220, 1]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 3

[State 1220, Width 1]
type = Width
trigger1 = AnimElemTime(5) >= 0 && AnimElemTime(6) < 0
value = 10,0

[State 1220, Width 2]
type = Width
trigger1 = AnimElemTime(6) >= 0 && AnimElemTime(9) < 0
value = 20,0

[State 1220, Shake Screen]
type = EnvShake
trigger1 = AnimElem = 5
time = 8
ampl = 3
freq = 170
ignorehitpause = 1

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage = 46, 10
priority  = 3, hit
hitflag = MAF
guardflag = MA
pausetime = 12,24
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 28
ground.hittime  = 28
ground.velocity = -8
air.velocity = -4.5,-6.5
fall = 0
air.fall = 1
yaccel = 0.4
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = -10

[State 1220, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------
; Triple Kung Fu Palm (hyper)
; CNS difficulty: medium
; Notes: Notice that the HitDefs in supers have "getpower = 0". This makes
;        sure KFM doesn't recharge his super guage as he hits.
;        Also, the attributes for the HitDefs is "HA" for "hyper attack",
;        ie. "attr = S, HA".
;        Notice how the first HitDef is reused twice by allowing it to
;        trigger on two animation elements.
[Statedef 3000]
type    = S
movetype= A
physics = N
juggle  = 4
velset = 0,0
anim = 3000
ctrl = 0
sprpriority = 2

[State 3000, Width]
type = Width
trigger1 = AnimElem = 2, >= 0
value = 15,0

[State 2600, Super A]
type = SuperPause
trigger1 = AnimElem = 3
pos = -49, -135
anim = s8064
sound = s102,1
poweradd = -1000

[State 3000, Super B]
type = AfterImage
trigger1 = AnimElem = 2, 1
time = 2

[State 3000, Super C]
type = AfterImageTime
trigger1 = AnimElemTime(2) >= 1 && Time < 60
time = 2

[State 3000, Super D]
type = NotHitBy
trigger1 = AnimElem = 1
value = SCA
time = 14

[State 3000, 1]
type = PlaySnd
trigger1 = AnimElem = 6
trigger2 = AnimElem = 11
trigger3 = AnimElem = 16
value = 102, 2

[State 3000, 4]
type = VelSet
trigger1 = AnimElem = 5
x = 4

[State 3000, 4]
type = VelSet
trigger1 = AnimElem = 19
x = 0

[State 3000, 5]
type = HitDef
trigger1 = AnimElem = 7
trigger2 = AnimElem = 12
attr = S, HA
damage = 68, 0
animtype = Hard
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 13, 14
sparkno = s8002
sparkxy = 0, -70
hitsound = s5,2
guardsound = s5,3
guard.sparkno = s8040
forcestand = 1
ground.type = High
ground.slidetime = 20
ground.hittime  = 20
ground.velocity = -11
airguard.velocity = -4,-1
air.type = High
air.velocity = -4.5,-6.5
air.juggle = 1
air.fall = 1
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = 0
envshake.time = 10
envshake.ampl = -10
envshake.freq = 230
getpower = 0,0

[State 3000, 5]
type = HitDef
trigger1 = AnimElem = 17
attr = S, HA
damage = 98, 0
animtype = DiagUp
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 24, 26
sparkno = s8002
sparkxy = 0, -70
hitsound = s5,4
guardsound = s5,3
guard.sparkno = s8040
forcestand = 1
ground.type = High
ground.slidetime = 20
ground.hittime  = 20
ground.velocity = -5.5,-6.5
airguard.velocity = -4,-1
air.type = High
air.velocity = -5.5,-6.5
air.juggle = 1
air.fall = 1
fall = 1
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = 0
yaccel = 0.5
envshake.time = 20
envshake.ampl = -10
envshake.freq = 230
getpower = 0,0

[State 3000, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Smash Kung Fu Upper (hyper)
; CNS difficulty: medium
; Description: This is very similar to KFM's Strong and Light Kung Fu Uppers.
;     There is just one HitDef, for a screen-shaking hit. The envshake
;     parameters are used to make this effect. You can find out more about
;     each parameter in the CNS documentation.
;     The fall.recover parameter is set at 0, meaning that p2 cannot recover
;     from the fall by entering his recovery command (for KFM, that is x+y).
;     This gives the attacking KFM a chance to follow up with another attack,
;     such as the Fast Kung Fu Palm.
;     Note that there is a ChangeState controller used to make KFM change to
;     a success state if he hits. The success state has KFM hold his arm
;     up longer for a dramatic effect.
[Statedef 3050]
type    = S
movetype= A
physics = S
juggle  = 4
velset = 0,0
anim = 3050
ctrl = 0
sprpriority = 2

[State 3050, Width]
type = Width
trigger1 = AnimElemTime(4) >= 0 && AnimElemTime(16) < 0
value = 5,0

[State 2600, Super A]
type = SuperPause
trigger1 = AnimElem = 2
pos = 54, -103
anim = s8064
sound = s102,1
poweradd = -1000

[State 3050, Super B]
type = AfterImage
trigger1 = AnimElem = 2
time = 2

[State 3050, Super C]
type = AfterImageTime
trigger1 = AnimElemTime(2) >= 0
time = 2

[State 3050, 1]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 2

[State 3000, 5]
type = HitDef
trigger1 = AnimElem =4
attr = S, HA
damage = 194, 0
animtype = Up
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 20, 24
sparkno = s8002
sparkxy = 0, -70
hitsound = s5,4
guardsound = s5,3
guard.sparkno = s8040
forcestand = 1
ground.type = High
ground.slidetime = 20
ground.hittime  = 20
ground.velocity = -2,-14
airguard.velocity = -4,-1
air.type = High
air.velocity = -2,-14
air.juggle = 1
air.fall = 1
fall = 1
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = 0
envshake.time = 20
envshake.ampl = -10
envshake.freq = 230
getpower = 0,0

;This controller below makes Kung Fu man change to a success state if he
;successfully hits the Smash Kung Fu Upper.
[State 3050, 4]
type = ChangeState
trigger1 = MoveHit
value = 3051

[State 3050, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;------------------
; Smash Kung Fu Upper (success)
; Description: This is the state that KFM changes to if he successfully hits
;     with Smash Kung Fu Upper. KFM holds his arm high for a short while
;     longer, then changes back to his idle stand state.
[Statedef 3051]
type    = S
movetype= A
physics = S
anim = 3051

[State 3051, 1]
type = AfterImageTime
trigger1 = AnimTime < -2
time = 2

[State 3051, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------superpuno
;superpuno
[Statedef 9010]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= 65
ctrl = 0
velset = 0,0
anim = 9010
sprpriority = 5

[State 9010, Width]
type = Width
trigger1 = (AnimElemTime (2) >= 0) && (AnimElemTime (7) < 0)
value = 15,0

[State 9010, 1]
type = PlaySnd
trigger1 = Time = 8
value = 1000, 1


[State 9010, 3]
type = SprPriority
trigger1 = AnimElem = 5
value = 2

[State 9010, 4]
type = EnvShake
trigger1 = time = 8
time = 25
freq = 140
ampl = -5 ;salto arriba y abajo cuanto en distancia
phase = 90

[State 9010, 5]
type = Explod
Anim = 250
trigger1 = time = 7
postype = p1
pos = 70,-50
bindTime = 1
removetime = 36
sprpriority = 5
ownpal = 1

[State 9010, 6]
type = Explod
Anim = 251
trigger1 = time = 7
postype = p1
pos = -70,-50
bindTime = 1
removetime = 36
sprpriority = -3
ownpal = 1

[State 9010, 7]
type = Explod
Anim = 1420
trigger1 = time = 10
postype = p1
pos = 70,0
bindTime = 1
removetime = 30
sprpriority = 5
ownpal = 1

[State 9010, 8]
type = Explod
Anim = 1421
trigger1 = time = 10
postype = p1
pos = -70,0
bindTime = 1
removetime = 30
sprpriority = 6
ownpal = 1


[State 9010, 9]
type = Explod
Anim = 1410
trigger1 = Time = 10
postype = p1
pos = 0,0
bindTime = 1
removetime = 30
sprpriority = 5
ownpal = 1

[State 1000, 5]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = DiagUp
damage = 152, 10
priority  = 3, hit
hitflag = MAFD
guardflag = MA
pausetime = 4,18
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-40
hitsound   = s5,4
guardsound = s5,3
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -5.5,-6.5
air.velocity = -5.5,-6.5
fall = 1
air.fall = 1
yaccel = 0.5
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = -10

[State 9010, 10]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 9010, 11]
type = PlaySnd
trigger1 = Time = 0
value = 900, 7

;8===========================================================================D
[Statedef 3100]
type    = S
movetype= A
physics = N
juggle  = 4
velset = 0,0
anim = 3100
ctrl = 0
sprpriority = 2

[State 3000, Width]
type = Width
trigger1 = AnimElem = 2, >= 0
value = 15,0

[State 2600, Super A]
type = SuperPause
trigger1 = AnimElem = 4
pos = 13, -113
anim = s8064
sound = s102,1
poweradd = -1000

[State 3000, Super B]
type = AfterImage
trigger1 = AnimElem = 2, 1
time = 2

[State 3000, Super C]
type = AfterImageTime
trigger1 = AnimElemTime(2) >= 1 && Time < 60
time = 2

[State 3000, Super D]
type = NotHitBy
trigger1 = AnimElem = 1
value = SCA
time = 9

[State 1005, 1]
type = PlaySnd
trigger1 = Time = 2
value = 900,8

[State 0, PalFXWiz]
type = PalFX
trigger1 = animelem = 1
time = 141
add = 100,-10,-200
mul = 256,256,256
sinadd = 40,30,0,11
invertall = 0
color = 200

[State 1005, 1]
type = PlaySnd
trigger1 = animelem = 5
trigger2 = animelem = 7
trigger3 = animelem = 9
trigger4 = animelem = 10
value = 9999,0

[State 1030, 5]
type = Helper
trigger1 = AnimElem = 5
persistent = 0
stateno = 3101; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 40,0
sprpriority = 10
ignorehitpause = 1
[State 1030, 5]
type = Helper
trigger1 = AnimElem = 6
persistent = 0
stateno = 3101; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 100,0
sprpriority = 10
ignorehitpause = 1
[State 1030, 5]
type = Helper
trigger1 = AnimElem = 7
persistent = 0
stateno = 3101; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 160,0
sprpriority = 10
ignorehitpause = 1
[State 1030, 5]
type = Helper
trigger1 = AnimElem = 8
persistent = 0
stateno = 3101; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 220,0
sprpriority = 10
ignorehitpause = 1
[State 1030, 5]
type = Helper
trigger1 = AnimElem = 9
persistent = 0
stateno = 3101; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 290,0
sprpriority = 10
ignorehitpause = 1
[State 1030, 5]
type = Helper
trigger1 = AnimElem = 10
persistent = 0
stateno = 3101; el num de statedef q vamos a usar pongan cualquier numero no usado
postype = P1
pos = 330,0
sprpriority = 10
ignorehitpause = 1

[State 3000, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[Statedef 3101]
type = S
movetype = A
physics = N
ctrl = 0
anim = 3101 ;animacion del char
velset = 0,0,0

[State 0, Explod]
type = Explod
trigger1 = animelem = 7
anim = 1410
ID = 1410
pos = 0,0
postype = p1
bindtime = 1
removetime = 32
sprpriority = -2
ownpal = 1
removeongethit = 0


[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 7
value = 9999,5

[State 1000, 5]
type = HitDef
trigger1 = animelem = 1
attr = A, SA
animtype  = Hard
damage = 44, 10
priority  = 3, hit
hitflag = MAFD
guardflag = H
pausetime = 4,13
sparkno = s8002
guard.sparkno = s8040
sparkxy = -10,-60
hitsound   = s5,2
guardsound = s5,3
ground.type = Low
ground.slidetime = 28
ground.hittime  = 28
ground.velocity = -11
air.velocity = -4.5,-6.5
fall = 0
air.fall = 1
yaccel = 0.5
ground.cornerpush.veloff = 0
guard.cornerpush.veloff = 0
envshake.time = 10
envshake.ampl = -10
envshake.freq = 230
getpower = 0,0

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animtime = 0


;---------------------------------------------------------------------------
; Triple Kung Fu Palm (hyper)
; CNS difficulty: medium
; Notes: Notice that the HitDefs in supers have "getpower = 0". This makes
;        sure KFM doesn't recharge his super guage as he hits.
;        Also, the attributes for the HitDefs is "HA" for "hyper attack",
;        ie. "attr = S, HA".
;        Notice how the first HitDef is reused twice by allowing it to
;        trigger on two animation elements.
[Statedef 3200]
type    = S
movetype= A
physics = N
juggle  = 4
velset = 0,0
anim = 3200
ctrl = 0
sprpriority = 2

[State 3000, Width]
type = Width
trigger1 = AnimElem = 2, >= 0
value = 15,0

[State 2600, Super A]
type = SuperPause
trigger1 = AnimElem = 1
pos = -18, -93
anim = s8064
sound = s102,1
poweradd = -2000

[State 3000, Super B]
type = AfterImage
trigger1 = AnimElem = 2, 1
time = 2

[State 3000, Super C]
type = AfterImageTime
trigger1 = AnimElemTime(2) >= 1 && Time < 60
time = 2

[State 3000, Super D]
type = NotHitBy
trigger1 = AnimElem = 1
value = SCA
time = 8

[State 3000, 1]
type = PlaySnd
trigger1 = AnimElem = 2
value = 0, 2

; Notes: The '-' symbol in the hitflag field means that it only affects
;   players who are not in a hit state. This prevents KFM from combo-ing
;   into the throw. The priority should be set to a low number, such as
;   1 or 2, so that the throw does not take precedence over normal attacks.
;   The type of priority must always be set to "Miss" or "Dodge" for throws,
;   otherwise strange behavior can result.
[State 800, 1]
type = HitDef
Trigger1 = Time = 0
attr = S, HT          ;Attributes: Standing, Normal Throw
hitflag = M          ;Affect only ground people who are not being hit
priority = 1, Miss    ;Throw has low priority, must be miss or dodge type.
sparkno = -1          ;No spark
p1sprpriority = 1     ;Draw p1's sprite in front of p2
                      ;p2's sprite priority is set to 0 by default
p1facing = 1
p2facing = -1          ;Force p2 to face KFM
p1stateno = 3201       ;On success, KFM changes to state 810
p2stateno = 3202       ;If hit, p2 changes to state 820 in KFM's cns
guard.dist = 0        ;This prevents p2 from going into a guard state if close
fall = 1              ;Force p2 into falling down

[State 3000, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[Statedef 3201]
type    = A
movetype= A
physics = N
juggle  = 0
velset = 0,0
anim = 3201
ctrl = 0
sprpriority = 2

[State 0, SprPriority]
type = SprPriority
trigger1 = animelem = 2
value = -2

[State 3000, Super B]
type = AfterImage
trigger1 = AnimElem = 1, 1
time = 2

[State 3000, Super C]
type = AfterImageTime
trigger1 = AnimElemTime(2) >= 1 && Time < 60
time = 2

[State 3000, 1]
type = PlaySnd
trigger1 = AnimElem = 3
value = 1000, 0

[State 3000, 1]
type = PlaySnd
trigger1 = AnimElem = 5
value = 1000, 1

[State 0, Explod]
type = Explod
trigger1 = animelem = 5
anim = 1410
ID = 1410
pos = 0,-10
postype = p1
bindtime = 1
removetime = 32
sprpriority = -2
ownpal = 1
removeongethit = 0

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 3
y = -10

[State 0, VelAdd]
type = VelAdd
trigger1 = time > 30 && time < 55
y = 1.1

[State 0, PosSet]
type = PosSet
trigger1 = animelemtime(5)>=0
y = 0
ignorehitpause = 1

[State 0, TargetBind]
type = TargetBind
trigger1 = animelem = 1
time = 10
pos = 45,0

[State 0, TargetBind]
type = TargetBind
trigger1 = animelem = 2
time = 10
pos = 8,-5

[State 0, TargetBind]
type = TargetBind
trigger1 = animelem = 3
time = 10
pos = 10,-85

[State 0, TargetBind]
type = TargetBind
trigger1 = animelem = 4
time = 28
pos = 10,-30

[State 0, TargetBind]
type = TargetBind
trigger1 = animelem = 5
time = 2
pos = 10,0

[State 0, EnvShake]
type = EnvShake
trigger1 = animelem = 5
time = 20
freq = 230
phase = 130
ampl = -10

[State 903, 11] ;Damage target
type = TargetLifeAdd
Trigger1 = AnimElem = 5
value = -302

[State 0, Explod]
type = Explod
trigger1 = AnimElem = 5
anim = 8002
ID = 8002
pos = 2,-44
postype = p1
bindtime = 1
removetime = -2
sprpriority = 5
ontop = 1
ownpal = 1

[State 3000, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[Statedef 3202]
type = A
movetype = H
physics = N
velset = 0,0

[State 820,AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = NoAutoTurn

[State 820, 1]
type = ChangeAnim2
Trigger1 = Time = 0
value = 3202

[State 904, 3] ;Bounce into air
type = ChangeState
Trigger1 = time = 60
value = 903
;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

[State -2, VarSet]
type = VarSet
trigger1 = command = "CPU0"
trigger2 = command = "CPU50"
trigger3 = command = "CPU1"
trigger4 = command = "CPU2"
trigger5 = command = "CPU3"
trigger6 = command = "CPU4"
trigger7 = command = "CPU5"
trigger8 = command = "CPU6"
trigger9 = command = "CPU7"
trigger10 = command = "CPU8"
trigger11 = command = "CPU9"
trigger12 = command = "CPU10"
trigger13 = command = "CPU11"
trigger14 = command = "CPU12"
trigger15 = command = "CPU13"
trigger16 = command = "CPU14"
trigger17 = command = "CPU15"
trigger18 = command = "CPU16"
trigger19 = command = "CPU17"
trigger20 = command = "CPU18"
trigger21 = command = "CPU19"
trigger22 = command = "CPU20"
trigger23 = command = "CPU21"
trigger24 = command = "CPU22"
trigger25 = command = "CPU23"
trigger26 = command = "CPU24"
trigger27 = command = "CPU25"
trigger28 = command = "CPU26"
trigger29 = command = "CPU27"
trigger30 = command = "CPU28"
trigger31 = command = "CPU29"
trigger32 = command = "CPU30"
trigger33 = command = "CPU31"
trigger34 = command = "CPU32"
trigger35 = command = "CPU33"
trigger36 = command = "CPU34"
trigger37 = command = "CPU35"
trigger38 = command = "CPU36"
trigger39 = command = "CPU37"
trigger40 = command = "CPU38"
trigger41 = command = "CPU39"
trigger42 = command = "CPU40"
trigger43 = command = "CPU41"
trigger44 = command = "CPU42"
trigger45 = command = "CPU43"
trigger46 = command = "CPU44"
trigger47 = command = "CPU45"
trigger48 = command = "CPU46"
trigger49 = command = "CPU47"
trigger50 = command = "CPU48"
trigger51 = command = "CPU49"
trigger52 = command = "CPU50"
trigger53 = command = "CPU51"
trigger54 = command = "CPU52"
trigger55 = command = "CPU53"
trigger56 = command = "CPU54"
trigger57 = command = "CPU55"
trigger58 = command = "CPU56"
trigger59 = command = "CPU57"
trigger60 = command = "CPU58"
trigger61 = command = "CPU59"
trigger62 = command = "CPU60"
trigger63 = command = "CPU61"
trigger64 = command = "CPU62"
trigger65 = command = "CPU63"
trigger66 = command = "CPU64"
trigger67 = command = "CPU65"
trigger68 = command = "CPU66"
trigger69 = command = "CPU67"
trigger70 = command = "CPU68"
trigger71 = command = "CPU69"
var(0) = 1



;This controller plays a sound everytime KFM lands from a jump, or
;from his back-dash.
[State -3, 1]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 900, 10

[State -3, 2]
type = Explod
Anim = 1415
sprpriority = -5
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0


