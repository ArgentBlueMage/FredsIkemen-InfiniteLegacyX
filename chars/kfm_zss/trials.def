```
; KFMZ TRIALS LIST ---------------------------

[TrialDef, Target Combo 1]

trial.dummymode = stand
trial.guardmode = none
trial.dummybuttonjam = none
; trial.showforvarvalpairs = 

trialstep.1.text = Jab
trialstep.1.glyphs = ^LP
trialstep.1.stateno = 200

trialstep.2.text = Strong
trialstep.2.glyphs = ^MP
trialstep.2.stateno = 210

trialstep.3.text = Feirce
trialstep.3.glyphs = ^HP
trialstep.3.stateno = 220

; trialstep.1.animno =
; trialstep.1.hitcount =
; trialstep.1.isthrow =
; trialstep.1.iscounterhit =
; trialstep.1.ishelper =
; trialstep.1.isproj =
; trialstep.1.validforvarvalpairs = 
; trialstep.1.validfortickcount = 

; TrialDef Parameter Descriptions
; ===============================
; [TriafDef, TrialTitle] - [TrialDef] mandatory - trial title after the comma is optional.

; trial.dummymode - optional - valid options are stand (default), crouch, jump, wjump. Defaults to stand if unspecified.
; trial.guardmode - optional - valid options are none, auto. Defaults to none if unspecified.
; trial.dummybuttonjam - optional - valid options are none, a, b, c, x, y, z, start, d, w. Defaults to none if unspecified.
; trial.showvarvalpairs - optional - (comma-separated integers, specified in pairs, can specify 0..n pairs). Used to determine whether a trial should be displayed based on the specified variable and value pair(s) in this field. Useful if a trial should only be displayed when character has a specific variable/value pair set, such as being in a specific groove or mode. If specified, the trial will only be displayed if all variable-value pairs return true. These variable-value pairs should only be for the character (not for helpers). Finally, variables can have multiple specified values to test against, which should be separated by the "|" character (e.g. `trial.showforvarvalpairs = 12, 0|2|4` would test var(12) for values 0, 2, and 4).

; dummymode, guardmode, and dummybuttonjam are defined once per trial. The other parameters can be defined for each trial step - notice the syntax, where X is the trial number.

; trialstep.X.text - optional - (string). Text for trial step (only displayed in vertical trials layout).
; trialstep.X.glyphs - optional - (string, see Glyph documentation [https://github.com/ikemen-engine/Ikemen-GO/wiki/Miscellaneous-info#movelists] for syntax). Same syntax as movelist glyphs. Glyphs are displayed in vertical and horizontal trials layouts.
; trialstep.X.stateno - mandatory - (integer or comma-separated integers). State to be checked to pass trial. This is the state whether it's the main character, a helper, or even a projectile.

; trialstep.X.animno - optional - (integer or comma-separated integers). Identifies animno to be checked to pass trial. Useful in certain cases.
; trialstep.X.hitcount - optional - (integer or comma-separated integers), will default to 1 if not defined. In some instances, you might want to specify a trial step to meet a hit count criteria before proceeding to the next trial step. Useful for multi-hit moves, or for moves that don't hit (e.g. taunts).
; trialstep.X.isthrow - optional - (true or false, or comma-separated true/false), will default to false if not defined. Identifies whether the trial step is a throw. Should be 'true' is trial step is a throw.
; trialstep.X.iscounterhit - optional - (true or false, or comma-separated true/false), will default to false if not defined. Identifies whether the trial step should be a counter hit. Typically does not work with helpers or projectiles.
; trialstep.X.ishelper - optional - (true or false, or comma-separated true/false), will default to false if not defined. Identifies whether the trial step is a helper. Should be 'true' is trial step is a hit from a helper.
; trialstep.X.isproj - optional - (true or false, or comma-separated true/false), will default to false if not defined. Identifies whether the trial step is a projectile. Should be 'true' is trial step is a hit from a projectile.
; trialstep.X.validforvarvalpairs - optional - (comma-separated integers, specified in pairs, can specify 0..n pairs). Sister functionality to "showforvarvalpairs". These variable-value pairs are used to optionally check a trial step. Useful if you are forcing the trial step to be completed when certain var-val pairs are met (for instance, while in a custom combo state). Variable-value pairs are considered valid for entire trial step (regardless if the trial step is specified using condensed terminology).
; trialstep.X.validfortickcount - optional (integer, or comma-separate integers), will default to nil if not defined. Makes the trials checking logic pause until the next hit is registered for the tickcount specified.

;---------------------------------------------

[TrialDef, Target Combo 2]
trialstep.1.text = Short
trialstep.1.glyphs = ^LK
trialstep.1.stateno = 230

trialstep.2.text = Forward
trialstep.2.glyphs = ^MK
trialstep.2.stateno = 240

trialstep.3.text = Roundhouse
trialstep.3.glyphs = ^HK
trialstep.3.stateno = 250
trialstep.3.hitcount = 2

;---------------------------------------------

[TrialDef, Launcher Combo]
; The next two trials show examples of condensed trial steps which check a series of parameters sequentially by using comma separated values as part of a single trial step. In other words, think of being able to specify multiple trial steps in a single step.
; For instance, this trial is the same as the previous, but the two steps are condensed into one.
; The next trial uses a combination of condensed steps and normal steps to provide a concise trial.
; Condensed steps can be very practical for multi-state moves where the trial step should only clear if all of the states are met, without having to create multiple trial steps.

trialstep.1.text = Crouching Jab
trialstep.1.glyphs = _D^LP
trialstep.1.stateno = 400

trialstep.2.text = Crouching Strong
trialstep.2.glyphs = _D^MP
trialstep.2.stateno = 410

trialstep.3.text = Crouching Feirce
trialstep.3.glyphs = _D^HP
trialstep.3.stateno = 420

; When desired, you can collapse multiple steps into a single one but using comma separated values in the following parameters:
; stateno, animno, hitcount, isthrow, iscounterhit, ishelper, isproj
; If one parameter on the trial step is defined using comma separated values, all parameters on that trial step must be defined similarly.

;---------------------------------------------

[TrialDef, Kung Fu Juggle]
trialstep.1.text = Kung Fu Knee + Kick
trialstep.1.glyphs = _F_F_+^K_.^K
trialstep.1.stateno = 1055

trialstep.2.text = Crouching Roundhouse
trialstep.2.glyphs = _D^HK
trialstep.2.stateno = 450

trialstep.3.text = Strong Kung Fu Palm
trialstep.3.glyphs = _QCF_+^HP
trialstep.3.stateno = 1015
trialstep.3.hitcount = 2

;---------------------------------------------

[TrialDef, Aerial Kung Fu]
trialstep.1.text = Launcher Combo
trialstep.1.glyphs = _D+^LP^MP^HP
trialstep.1.stateno = 400, 410, 420
trialstep.1.hitcount = 1, 1, 1

trialstep.2.text = Air Target Combo 1
trialstep.2.glyphs = _AIR+^LP^MP^HP
trialstep.2.stateno = 600, 610, 620
trialstep.2.hitcount = 1, 1, 1

trialstep.3.text = Target Combo 2
trialstep.3.glyphs = ^LK^MK^HK
trialstep.3.stateno = 230, 240, 250
trialstep.3.hitcount = 1, 1, 2

trialstep.4.text = Heavy Kung Fu Zankou
trialstep.4.glyphs = _QDF+^HK
trialstep.4.stateno = 1415

trialstep.5.text = Medium Kung Fu Palm
trialstep.5.glyphs = _QDF+^MP
trialstep.5.stateno = 1010

;---------------------------------------------

[TrialDef, Kung Fu Jawbreaker] 
trialstep.1.text = Air Strong Kick
trialstep.1.glyphs = _AIR^HK
trialstep.1.stateno = 650

trialstep.2.text = Short
trialstep.2.glyphs = ^LK
trialstep.2.stateno = 230

trialstep.3.text = Forward
trialstep.3.glyphs = ^MK
trialstep.3.stateno = 240

trialstep.4.text = Jab
trialstep.4.glyphs = ^LP
trialstep.4.stateno = 200

trialstep.5.text = Strong
trialstep.5.glyphs = ^MP
trialstep.5.stateno = 210

trialstep.6.text = Fast Kung Fu Palm
trialstep.6.glyphs = _QDF^2P
trialstep.6.stateno = 1020

trialstep.7.text = Smash Kung Fu Upper
trialstep.7.glyphs = _QDB_QDB^P
trialstep.7.stateno = 3050

;---------------------------------------------

[TrialDef, Corner to Corner] 
trialstep.1.text = Launcher Combo
trialstep.1.glyphs = _D+^LP^MP^HP
trialstep.1.stateno = 400, 410, 420
trialstep.1.hitcount = 1, 1, 1

trialstep.2.text = Air Strong
trialstep.2.glyphs = _AIR+^MP
trialstep.2.stateno = 610

trialstep.3.text = Air Feirce
trialstep.3.glyphs = _AIR+^HP
trialstep.3.stateno = 620

trialstep.4.text = Target Combo 2
trialstep.4.glyphs = ^LK^MK^HK
trialstep.4.stateno = 230, 240, 250
trialstep.4.hitcount = 1, 1, 1

trialstep.5.text = Heavy Kung Fu Palm
trialstep.5.glyphs = _QDF^HP
trialstep.5.stateno = 1015
trialstep.5.hitcount = 2

trialstep.6.text = Triple Kung Fu Palm
trialstep.6.glyphs = _QDF_QDF^P
trialstep.6.stateno = 3000
trialstep.6.hitcount = 3

;---------------------------------------------

[TrialDef, Double Trouble] 
trialstep.1.text = Short
trialstep.1.glyphs = ^LK
trialstep.1.stateno = 230

trialstep.2.text = Forward
trialstep.2.glyphs = ^MK
trialstep.2.stateno = 240

trialstep.3.text = Jab
trialstep.3.glyphs = ^LP
trialstep.3.stateno = 200

trialstep.4.text = Feirce
trialstep.4.glyphs = ^HK
trialstep.4.stateno = 250

trialstep.5.text = Heavy Kung Fu Blow
trialstep.5.glyphs = _QDB^HP
trialstep.5.stateno = 1215

trialstep.6.text = Triple Kung Fu Palm
trialstep.6.glyphs = _QDF_QDF^P
trialstep.6.stateno = 3000
trialstep.6.hitcount = 2

trialstep.7.text = Smash Kung Fu Upper
trialstep.7.glyphs = _QDB_QDB^P
trialstep.7.stateno = 3050

trialstep.8.text = Crouching Roundhouse
trialstep.8.glyphs = _D^HK
trialstep.8.stateno = 450

trialstep.9.text = Heavy Kung Fu Palm
trialstep.9.glyphs = _QDF^HP
trialstep.9.stateno = 1015
trialstep.9.hitcount = 2

```